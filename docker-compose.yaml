version: "3.8"

volumes:
  db-service:

services:
  db:
    image: postgres:16.7-alpine3.20
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=123456
    volumes:
      - db-service:/var/lib/postgresql/data

  backend:
    build: ./example-credit-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      ALLOWED_ORIGINS: ${HOST:-http://localhost}:8080
    ports:
      - 8089:8080
    depends_on:
      - db


  frontend:
    build: ./example-credit-app
    environment:
      API_URL: ${HOST:-http://localhost}:8089/api
    ports:
      - "8080:80"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.5
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.5
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,DOCKER://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

 

  kafka-control:
    image: confluentinc/cp-enterprise-control-center:7.4.9-1-ubi8
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:29092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021
    depends_on:
      - zookeeper
      - kafka

  create-topic:
      image: confluentinc/cp-kafka:7.6.5
      depends_on:
        - kafka-control
      entrypoint: ['sh', '-c', 'sleep 10 && kafka-topics --create --bootstrap-server kafka:29092 --partitions 1 --replication-factor 1 --topic consultas']
